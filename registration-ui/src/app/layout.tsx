// registration-ui/src/app/layout.tsx
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ResponsivePageHeader from '@/components/ui/PageHeader/PageHeader'; // ensure this file has 'use client'

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({ variable: "--font-geist-mono", subsets: ["latin"] });

/**
 * Global metadata applied to the entire app.
 *
 * Next.js aggregates this with layout/page metadata across the route tree.
 * Keep this free of dynamic values unless you intend to override at the page level.
 */
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

/**
 * Root layout (Server Component).
 *
 * - Loads global fonts via `next/font` and exposes them as CSS variables:
 *   - `--font-geist-sans` (Geist)
 *   - `--font-geist-mono` (Geist Mono)
 * - Injects global styles from `globals.css`.
 * - Renders the responsive page header (a Client Component) above all routes.
 * - Wraps route content via the `children` prop.
 *
 * This layout is rendered for every route under `/app`. Because the header is a
 * Client Component, ensure it begins with `"use client"` and avoids server-only APIs.
 *
 * @param props.children - The route segmentâ€™s React node rendered within the layout.
 * @returns The HTML document structure with global header and route content.
 *
 * @example
 * // Any page under /app will be wrapped by this layout:
 * export default function Page() {
 *   return <div>My page content</div>;
 * }
 */
export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ResponsivePageHeader
          publicLinks={[{ label: "Home", href: "/" }]}
          guestLinks={[{ label: "Register", href: "/register" }, { label: "Login", href: "/login" }]}
          authenticatedLinks={[{ label: "Dashboard", href: "/dashboard" }, { label: "Profile", href: "/profile" }]}
        />
        {children}
      </body>
    </html>
  );
}
